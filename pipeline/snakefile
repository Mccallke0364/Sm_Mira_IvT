config_file: "config.yaml"

rule all:
    input:
        "genome/genome.fa.fai",
        "genome/annotations.gtf",
        # "trimmed/Int-02_S43_L005_R1_001.fastq.gz",
        "trimmed/",
        "multiqc_report_all_files.html"
        
        # "trimmed/Int-02_S43_L005_R2_001.fastq.gz"
        # "trimmed/"
       
    # conda:
    #     "env.yaml"

rule fetch_ref_genome:
    output:
        "genome/genome.fa.gz"
    shell:
        "wget -O {output} https://ftp.ebi.ac.uk/pub/databases/wormbase/parasite/releases/WBPS19/species/schistosoma_mansoni/PRJEA36577/schistosoma_mansoni.PRJEA36577.WBPS19.genomic.fa.gz"

rule gzip_genome:
    input:
        "genome/genome.fa.gz"
    output:
        "genome/genome.fa"
    shell:
        "gzip -d -f {input}"

rule fetch_ref_annotations:
    output:
        "genome/annotations.gtf"
    shell:
        "wget -O - https://ftp.ebi.ac.uk/pub/databases/wormbase/parasite/releases/WBPS19/species/schistosoma_mansoni/PRJEA36577/schistosoma_mansoni.PRJEA36577.WBPS19.canonical_geneset.gtf.gz | gzip -f -d > {output}"

rule create_fai:
    input:
        "genome/genome.fa"
    output:
        "genome/genome.fa.fai"
    shell:
        "samtools faidx {input}"

rule cutadapt:
    input:
        # "/data/classes/2024/fall/biol343/course_files/20240923_LH00283_0144_B22NMVKLT3/Int-02_S43_L005_R2_001.fastq.gz"
        i_1="/data/classes/2024/fall/biol343/course_files/20240923_LH00283_0144_B22NMVKLT3/{sample}_R1_001.fastq.gz",
        i_2="/data/classes/2024/fall/biol343/course_files/20240923_LH00283_0144_B22NMVKLT3/{sample}_R2_001.fastq.gz",

    output:
        # "qc/fastq_qc/Int-02_S43_L005_R2_001_fastqc.html",
        # "qc/fastq_qc/Int-02_S43_L005_R2_001_fastqc.zip",
        # file_out="trimmed/Int-02_S43_L005_R2_001.fastq.gz",

        # "qc/fastq_qc/{sample}_fastqc.html",
        # "qc/fastq_qc/{sample}_fastqc.zip",
        o_1="trimmed/{sample}_R1.fastq.gz",
        o_2="trimmed/{sample}_R2.fastq.gz"
    # params:
    #     qc_out="qc/fastq_qc/"
    
    # conda:
    #     "env.yaml"
    shell:
        # "for fastq in {input}; do \ 
        # forward AGATCGGAAGAGCACACGTCTGAACTCCAGTCA
        # reverse AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT
        "cutadapt -a AGATCGGAAGAGCACACGTCTGAACTCCAGTCA -A AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT -o {output.o_1} -p {output.o_2} {input.i_1} {input.i_2}"#"; \ done"#),
        # shell("fastqc -t 16 {input} -o {params.qc_out}")
rule multi_qc_report_copy:
    input:
        "/data/classes/2024/fall/biol343/course_files/20240923_LH00283_0144_B22NMVKLT3/multiqc_report.html"
    output:
        directory("qc_snake/"),
        out="qc_snake/multiqc_report.html"
        
    shell:
        "cp {input} {output.out}" 
    # params:
    #     outdir="qc_snake/multiqc_report.html"
    #{params.outdir}"
    #     # "qc/fastq_qc/Int-02_S43_L005_R2_001_fastqc.html",
    #     # "qc/fastq_qc/Int-02_S43_L005_R2_001_fastqc.zip"

rule qc:
    input:
        "/data/classes/2024/fall/biol343/course_files/20240923_LH00283_0144_B22NMVKLT3/{sample_1}.fastq.gz"
    output:
        "qc_snake/{sample_1}_fastqc.html",
        "qc_snake/{sample_1}_fastqc.zip",

    params:
        out="qc_snake/"

    shell:
        "fastqc -t 16 {input} -o {params.out}"

rule qc_2:
    input:
        "trimmed/{sample}.fastq.gz"

    output:
        "qc_snake/{sample}_fastqc.html",
        "qc_snake/{sample}_fastqc.zip",
    params:
        qc_2_out="qc_snake/"
    shell:
        "fastqc -t 16 {input} -o {params.qc_2_out}"

rule multiqc:
    input:
        "qc_snake/"
    #     "trimmed_qc/",
    #     "fastq_qc/"
    output:
        "multiqc_report_all_files.html"
    shell:
        "multiqc -f -d {input}/ -n {output}"